"""
Django settings for djangocelery project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import djcelery
from celery.schedules import timedelta
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'zgvq)=zp!@w@rh%b!3g=4@*c57fn9=rat5#3#etb7v()i6olx9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'apps.app1.apps.App1Config',
    'apps.app2.apps.App2Config',
    'djcelery',
    'rest_framework',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djangocelery.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangocelery.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'djangocelery',
        'USER': 'root',
        'HOST': 'localhost',
        'PASSWORD': 'root',
        # 'PASSWORD': '1234567',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

# 当djcelery.setup_loader()运行时，Celery便会去查看INSTALLD_APPS下包含的所有app目录中的tasks.py文件，
# 找到标记为task的方法，将它们注册为celery task。
djcelery.setup_loader()  # 对配置进行加载

BROKER_URL = 'redis://127.0.0.1:6379/0'             # broker是代理人，它负责分发任务给worker去执行
CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/1'  # 后端，用于存储任务执行结果，推荐redis

CELERY_TASK_SERIALIZER = 'json'                     # 任务的序列化方式
CELERY_RESULT_SERIALIZER = 'json'                   # 任务执行结果的序列化方式
CELERY_ACCEPT_CONTENT = ['json']                    # 指定任务接受的内容序列化类型(序列化)，一个列表；
CELERY_IMPORTS = ('app1.tasks', )                    # 定义任务所在的模块
CELERY_TIMEZONE = 'Asia/Shanghai'                   # 时区设置，计划任务需要，推荐 Asia/Shanghai
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'
CELERYD_CONCURRENCY = 4                             # worker并发数   任务消费者的并发数
CELERYD_PREFETCH_MULTIPLIER = 1  # 每个worker 领取一个任务
CELERYD_FORCE_EXECV = True
CELERYD_MAX_TASKS_PER_CHILD = 100  # 每个worker最多执行玩100个任务就会被销毁，可防止内存泄露



# CELERY_FORCE_EXECV = True# 有些情况可以防止死锁
# CELERY_QUEUES # Celery队列设定
CELERY_TASK_RESULT_EXPIRES = 60 # 60 * 60 * 24   # 任务过期时间
# 规定完成任务的时间
# CELERYD_TASK_TIME_LIMIT = 15 * 60 # 在15分钟内完成任务，否则执行该任务的worker将被杀死，任务移交给父进程

# celery的定时任务都是有celery beat来进行调度，celery beat默认按照settings.py之中的时区时间来调度定时任务。
# celery 创建定时任务  Celery计划任务设定
CELERYBEAT_SCHEDULE = {
    # 定时任务一：　每隔s运行一次
    'task1': {
        # "task": "apps.orders.tasks.order_to_mission",
        "task": "app1.tasks.add",
        "schedule": timedelta(seconds=5),
        "args": (100, 200),
    },
}


# RESTFRAMEWORK 认证配置参数,全剧设置
REST_FRAMEWORK = {
    # 认证的全局配置
    "DEFAULT_AUTHENTICATION_CLASSES": (
        # 'apps.app1.utils.auth.FirstAuthtication',
        # 'apps.app1.utils.auth.Authtication',
    ),

    # 权限的全局配置
    # "DEFAULT_PERMISSION_CLASSES": [
    #     'apps.app1.utils.permissions.Mypermission',
    #     'apps.app1.utils.permissions.Mypermission2',
    # ],

    # 访问频率的控制--自定义频率限制类
    'DEFAULT_THROTTLE_CLASSES': (
        # 'apps.app1.utils.throttle.VisitThrottle',
        # 'apps.app1.utils.throttle.VisitThrottle2',
        # 'apps.app1.utils.throttle.UserThrottle',

    ),

    # Throttling,访问频率的控制--设定访问频率的相关参数
    'DEFAULT_THROTTLE_RATES': {
        'wzp': "5/m",  # 表示1分钟内只允许访问3次   wzp仅代表一个键名字  源码中会根据scope中所赋值来决定的，然后来获取rate=4/m  缓存中
        'wzp01': "7/m",
        'user': None,
        'anon': None,
    },

    """以下是restframework中的get方法传递版本参数的配置参数"""  
    'DEFAULT_VERSION': "v1", # 默认版本v1
    'ALLOWED_VERSIONS': ["v1","v2"], # 表示允许的版本只有v1，v2
    'VERSION_PARAM': "version",# 设置url中参数的关键字    比如：http://127.0.0.1:8000/?version==v1中的version为前边设置的字符串

    # """以下是restframework中的通过url路径来传递版本参数的配置方法"""
    "DEFAULT_VERSIONING_CLASS": 'rest_framework.versioning.URLPathVersioning',




}





